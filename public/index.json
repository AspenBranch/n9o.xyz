[{"content":"Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas\n","date":"19 June 2022","permalink":"/mentor/","section":"Nuno Coração","summary":"Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas Lorem ipsum alkdas","title":"Mentor"},{"content":"","date":"19 June 2022","permalink":"/music/","section":"Nuno Coração","summary":"","title":"Music"},{"content":"Books # Design of Everyday Things # asdasd\nDesign of Everyday Things # asdasd\nDesign of Everyday Things # asdasd\nZero to One # asdasd\nLean Startup # asdasd\nZero to One # asdasd\nArticles # blabla # asdasd\nOnline Publications # Stratechery # asdasd\nHBR # asdasd\nPodcasts # bla bal # ","date":"19 June 2022","permalink":"/recommendations/","section":"Nuno Coração","summary":"Books # Design of Everyday Things # asdasd\nDesign of Everyday Things # asdasd\nDesign of Everyday Things # asdasd\nZero to One # asdasd\nLean Startup # asdasd\nZero to One # asdasd","title":"Recommendations"},{"content":" TL;DR # Currently there are several solutions to build and host your personal website. I wanted to challenge myself to see if I could do it with the same set of features as some of the paid solutions out there and for free. Here are the results.\nWhy would a PM build their own homepage from scratch… # A couple of months ago I decided that I wanted to start writing more in order to a) exercise my writing skills and b) get feedback on some of my ideas. With this goal in mind, I started researching tools/platforms that would help me publish without creating too much friction for me, nor for the people wanting to read what I have to say e.g. having to pay. Ultimately I decided upon creating my own website.\nI had a couple of reasons for wanting to try this:\nto challenge myself to see if I, a previous software engineering student, could still bodge something together that would work and feel good about not having forgotten everything I ever learned about programming,\nfind a flexible free solution that would allow me to kickstart my website without starting investing money right away into it, aka avoiding operational costs with platforms and services that would lock me in the future,\nhave my content hosted in a place that will not require people to pay for reading it\nNote: If you just want to clone a repo with the final skeleton already build feel free to clone the following repo and skip to the deploy section\ngit clone https://github.com/nunocoracao/homepage-hugo-congo Let’s get started… # After some research I decided to choose a website generator framework and a free hosting service. For the website framework I choose Hugo and the hosting service Firebase. And for obvious reasons I decided to my development environment using Docker in order to put myself in the user shoes for this experiment.\nDisclaimer: I am perfectly aware that this might not be the best solution out there for what I am trying to achieve. If you think there’s either a) a better way to do it or b) a smarter solution from scratch feel free to reach out. Requirements # For this guide I will use the following software, which should be installed in your machine. Here is a small explanation on what each component is going to be used for and a link to the installation instructions.\nDocker - I will use Docker to configure a development environment for this project so that we can skip the need to install all the software required to run Hugo and Firebase CLI i.e. CuRL, Go, Hugo,Node, NPM, etc. This will allow you to start from a git repository, start the environment and go straight into writing code instead of spending hours figuring out how to install a specific compiler for your CPU architecture. Install Docker\nVisual Studio Code - I\u0026rsquo;m using Visual Studio Code as my integrated development environment (IDE) at the moment, and all the material in the guide assumes that this is what you\u0026rsquo;re using. If you have a different preference for your IDE you’ll need to adapt some parts of this guide to achieve the same results. Install Visual Studio Code\nRemote - Containers - This is a VSCode extension that will allow you to spin the GitHub repo inside a container with a couple of clicks. Highly recommend this one to save you time.\nSetup local environment # Let\u0026rsquo;s start by configuring your development environment using Docker. This will allow you to create a container with all the tools you need inside of it without having to mess with your system configurations. Moreover, it will also make it easier to just delete the container and rebuild it whenever you need it instead of keeping old versions of software you don\u0026rsquo;t require daily in your personal machine.\nStart by cloning the GitHub repository with the development environment condigurations.\ngit clone https://github.com/nunocoracao/homepage-kickstart Note: If you want to install everything locally feel free to go straight into Hugo\u0026rsquo;s website and follow their guide. You can pick up here once you have Hugo installed and they ask you to create your first website. After successfully cloning the repo, open that folder in VSCode and open the “Remote - Containers” extension panel on the left. Select \u0026ldquo;Open folder in container\u0026rdquo; to spin up a container with the development environment.\nWait a couple of minutes while the image is built. Docker is creating an image with all the required software for the development of the website. This will only happen the first time you spin the environment.\nOnce the build is done, VSCode will spin the container and will place you working environment inside of it (information available in the bottom left corner of the window). Once that is done open, you now have a development environment with Go, Hugo, FirebaseCLI, and all the tools you will need for this guide. Just open a new terminal and you’re ready to begin creating your site.\nCreate Site Skeleton # Now that we have a development environment running the first step is to create the base version of your website. For this let’s use Hugo to generate the folder template and configuration files we need by running the following command:\nhugo new site . --force This should have created a set of folders inside your workspace that you don’t need to worry about for now. Next step is to install a theme for Hugo. I choose Congo as it had all the features I required for my website and it seemed to be easy to change if I ever need it to. If you want to try a different theme there are several available in Hugo’s documentation, each with documentation and examples.\nInstall Congo using git submodules by running the following command:\ngit submodule add -b stable https://github.com/jpanther/congo.git themes/congo Now we need to make some changes to the directory and file structure so that Congo can work properly. I will not get into the details of what is happening in this guide (you can consult Congo’s documentation if you want to learn more), the main takeaway is that we’re creating and configuring a folder in config/_default/ which will contain all the important configuration files for Hugo and Congo.\nPlease run the following commands in order:\nmkdir config mkdir config/_default rm config.toml cp themes/congo/config/_default/*.toml config/_default/ echo \u0026#39;theme = \u0026#34;congo\u0026#34;\u0026#39; | cat - config/_default/config.toml \u0026gt; temp \u0026amp;\u0026amp; mv temp config/_default/config.toml Congratulations, you should have your site up and running now. Let\u0026rsquo;s try it out by running Hugo\u0026rsquo;s debug server:\nhugo server -D Please open your favorite browser and navigate to localhost:1313 to see your page.\nYou should see something similar to the image above. Doesn’t look that exciting does it? Let’s configure the theme in the next sections and learn how to create your first aricle.\nConfigure Theme # Now I’ll be covering how to change the look and feel of your website, add some personal information, and activate the dark mode toggle (aka the most important feature in any website these days). A note, I am covering a very simple configuration for this theme please check Congo’s theme documentation for a full deep dive on everything you can do with this theme.\nProfile picture # Let’s start by adding a profile picture to your site. Create a folder called “assets” in the root of your project. You can use VSCode interface your type in the command:\nmkdir assets Choose a profile picture and place it inside the assets folder. The rest of the guide will assume the final picture is named \u0026ldquo;profile.jpg\u0026rdquo;, so please rename your picture or take that into account when configuring some of the other files.\nNote: If you still need to take a proper awesome picture feel free to download the one below to proceed with the tutorial. Configuration Files # Let’s open a couple of configuration files and start updating them. All the files we are going to change are inside config/_default/ folder.\nconfig.toml # Uncomment the baseURL parameter and replace it with the final domain of your website. This value will be used to create the robots.txt file for any search engines to successfully crawl and index your website.\nNote: if you want to configure Google Analytics please add the following line with your id to this file\ngoogleAnalytics = \u0026#34;G-XXXXXX\u0026#34; languages.en.toml # This file will drive the main information for the website and the author of the page (you). Replace the title and description for the ones you want for your page, these values will drive the HTML title and description tags.\nUnder the tage [author] you can update the details that you wish to highlight in your profile. The bare minimum would be name, image, headline, and links. For the links parameters don\u0026rsquo;t forget to uncomment the last line of the file as this is a json array. In my files I have uncommented the lines I wanted to use and left the others in the file if I want to play around with them in the future.\nparams.toml # This file defines much of the overall behaviour across the entire framework. For this tutorial I changed some of the overall values and one for the homepage, if you want to learn more about the other available configurations please consult Congo’s theme documentation. I\u0026rsquo;ve changed colorScheme to \u0026ldquo;ocean\u0026rdquo; which changes the global UI theme. Congo defines a three-colour palette that is used throughout the theme. Each main colour contains ten shades which are based upon the colours that are included in Tailwind. Valid values are congo (default), avocado, ocean, fire and slate. Although these are the default schemes, you can also create your own. Refer to Congo\u0026rsquo;s main documentation to learn how.\nActivated showAppearanceSwitcher to enable the light/dark mode toggle. Activated enableSearch which indexes all future posts each time you build the site and provides a simple search feature. And finally,changed the value of layout, inside [homepage], to \u0026ldquo;profile\u0026rdquo;. Another interesting value here is showRecent, which when turned on shows the recent posts on the homepage.\nFinal # Let’s see how it looks, run the Hugo again:\nhugo server -D And navigate to localhost:1313 you should see something similar to the page below.\nCongrats it’s looking great, let’s learn how to generate your first articles.\nHow to generate articles # Hugo provides some tools to generate your articles (markdown files) with a base set of tags already in them. Run the following command to create you first post\nhugo new posts/my-first-post.md replace the contents of the file with the following:\n--- title: \u0026#34;My Published Post\u0026#34; date: 2022-06-19T20:10:29Z draft: false categories: [\u0026#34;published\u0026#34;, \u0026#34;test\u0026#34;] tags: [\u0026#34;first\u0026#34;, \u0026#34;awesome\u0026#34;] --- This is my first blog post This just created your first blog post. We\u0026rsquo;ve added a couple of categories and tags, which will be indexed by Hugo during build time. These tags will be used to create the Categories and Tags section of the website automatically for you. Notice that I\u0026rsquo;ve changed the draft to false to simulate a published post.\nRun the following command to create you second post\nhugo new posts/my-draft-post.md and replace the contents of that file with the following:\n--- title: \u0026#34;My Draft Post\u0026#34; date: 2022-06-19T20:20:39Z draft: true categories: [\u0026#34;draft\u0026#34;, \u0026#34;test\u0026#34;] tags: [\u0026#34;second\u0026#34;, \u0026#34;awesome\u0026#34;] --- This is my second blog post For the second post, I\u0026rsquo;ve left the draft parameter true to simulate a draft post.\nHugo automatically hides draft posts from the final site generation. You can keep working on articles leaving the draft label true and they will be ignored by the engine. If you want to run in DEBUG mode just use the command:\nhugo server -D If you go to the posts in the site you should be able to see both entries. If you then run the server in normal mode the draft articles will disappear. You can use the command below to do so:\nhugo server You can use this command to test the final version of the website or an article before generating the final build. When you\u0026rsquo;re ready just use the command \u0026lsquo;hugo\u0026rsquo; to generate the final website inside the /public folder.\nhugo Deploy # Ok, you’ve configured your website, created a couple of articles, but we still need to deploy it somewhere. As I mentioned before for this guide I choose Firebase, even though I now that it offers much more than just a simple hosting service it allows me to host my site for free without much of a hassle.\nCreate Firebase Project # Let’s start by going to https://firebase.google.com and creating an account. Once that is done you can create a project for free. The process should be straightforward and when you finish you should be in Firabase project dashboard like in the image below.\nSetup Firebase # Now you can go back to your environment which already has Firebase CLI tools installed and ready to go. Let’s start by authenticating using:\nfirebase login Once you are successfully logged in you need to initiate the project configurations for firebase. For that please use:\nfirebase init The tool will offer you a wide variety of different options in order to configure your firebase project. For now we just want to configure hosting:\nChoose the Firebase project created before as the hosting destination. And select the configurations you wish for the deploy process. The important one here is the folder where the final files to the server will be placed and this is the public folder. For the other parameters you experiment what better matches your use-case, the image below shows you what I picked.\nDeploy # Ok, not for the long and boring process of deploy… joking! Once you are ready and have all your files generated by the hugo command in the public folder just use the following command to deploy:\nfirebase deploy The process should take a couple of seconds and there you go your site is deployed. The final line of the CLI tool will give you a URL to see for yourself, otherwise you can explore your Firebase dashboard hosting section which will have more information regarding the deployment.\nConclusion # By now you should have a simple version of your website and can now configure it to your needs. The main advantage of this solution is that it is flexible and extensible to your needs (might require some coding for complex features) and above all it’s cheap if you\u0026rsquo;re looking to begin and can\u0026rsquo;t (or don\u0026rsquo;t want to) spend any money on it.\nHope this guide helps you, feel free to share with your network and provide feedback so that I can make it better over time.\nResources # GitHub Repo for development environment GitHub Repo for base Hugo and Congo configuration Hugo's Documentation Congo's Documentation Firebase Documentation Markdown Cheat Sheet ","date":"19 June 2022","permalink":"/posts/202206-homepage-guide/","section":"Posts","summary":"Currently there are several solutions to build and host your personal website. I wanted to challenge myself to see if I could do it with the same set of features as some of the paid solutions out there and for free. Here are the results.","title":"How I started my own Homepage for free using Docker, Hugo, and Firebase"},{"content":"Experience Docker Staff Product Manager 2022 - Present Working on Customer Success team with the mission to ensure the successful onboarding of Docker users across our products. Truphone Group Product Manager 2021 - 2022 Leading a Product Management team under the Connect Group, encompassing different areas from its main products like Connect API CaaS platform and IoT Portal to general areas like data, pricing, and eSIM connectivity. Responsible for defining group strategy and vision. Work closely with senior management, business stakeholders, and engineering teams to align and deliver the group roadmap. Hiring, managing, growing, and mentoring a team of junior and senior product managers, each owning their products, roadmaps, and teams. Contributing to writing and reviewing PRDs within the group and with engineering teams. Senior Product Manager 2020 - 2021 Product development and launch of Truphone Connect, a brand new platform to expose Truphone’s backend technology and network via a simple set of APIs. Complete end-to-end ownership of the product from initial vision to launch. Ensuring exec alignment and being the product evangelist across the organisation. Responsible for the development team\u0026rsquo;s backlog, priorities, and technical strategy. Support sales and business dev teams on new opportunities. Worked closely with Marketing and Design teams on pre and post launch activities. Managing a team of two junior PMs. Vodafone Group Analytics Squad Lead 2019 - 2020 Responsible over product ownership and evolution of analytics platform for Vodafone TV. Development of new product and business metrics, tools, and integrations that empower business intelligence and product teams with behaviour and technical data to evolve the product. Senior Product Manager 2018 - 2019 Management of product roadmap for all platforms of Vodafone TV: STB, Mobile, SmartTV, and Web. Market engagement with Vodafone TV operational teams in more than 8 countries to align strategic view, requirement backlog, and future of platform. Creation of product epics and engagement with internal teams to drive the creation of a world-class video product with features such as recommendations and voice interaction. Sky Deutschland Senior Product Architect 2016 - 2018 E2E Metadata Design and definition for Sky Q (STB and Mobile Applications) for Germany and Austria. Liaising with Product and Technical teams in Germany and UK to evolve the current product for new markets. Support the integration and testing teams in order to guarantee the delivery of the envisioned solution. Skimic Founder 2016 - 2017 Founder, Product Manager, and Lead developer at Skimic, a semantic news aggregation platform. Created the product concept and architecture design that drove the platform to 6k monthly active users in less than a year. Developed the web, bookmarklet, and mobile apps (iOS + Android) using reactjs, react-native, and node.js. Developed all the backend system including: search, NLP analysis, and web crawlers. Vodafone Group Product Manager 2015 - 2016 Product and technical specification of new features for Vodafone TV platform (STB, Mobile Apps, and Web). Work with the concept teams to bring the vision of new features to life. Liaising with the development team to convey the product and technical vision for the product. NOS Product Manager 2014 - 2015 Product owner of several projects from concept to production. Work on a daily basis with designer, developers, system architects, and managers to build a common vision and deliver a world class product. Development, specification, and requirement management of products like: IRIS, NOS UMA, IRIS Apps, and NOS mobile Apps. Quick implementation of prototypes to demo new ideas, concepts, or features to higher management. Solutions Architect 2012 - 2014 Technical solution owner of several projects. Worked on IRIS architectural design (APIs and STB Middleware), several TV and mobile apps, and also core systems in the organisation (OAuth login system, Core APIs, and SEE - Semantic Enrichment Engine). Design, specification, and research of software architectures for Digital Television systems, mobile devices, and web. Development of prototypes and proofs-of-concept for new products. INESC-ID Junior Researcher 2011 - 2012 Research and development of a privacy-aware record/replay tool for graphical applications called GAUDI within the FastFix project, sponsored by the European Union Programme 7. Responsibility for all all the deliveries and demos of this work package of the project. Education Entrepreneurship Essentials 2022 Harvard Business School Online Entrepreneurship Essentials is an online certificate program from Harvard Business School. Entrepreneurship Essentials introduces participants to the entrepreneurial journey from finding an idea to gaining traction in the marketplace to raising capital for a venture. Participants learn an overarching framework—People, Opportunity, Context, Deal—to evaluate opportunities, manage start-ups, and finance ventures. Disruptive Strategy with Clayton Christensen 2021 Harvard Business School Online Disruptive Strategy with Clayton Christensen is an online certificate program from Harvard Business School. Disruptive Strategy helps students become fluent in disruption theory and gain confidence in articulating complex viewpoints, apply strategic frameworks to assess new opportunities and potential threats, and acquire techniques for executive-level strategy formulation and team management. The program was developed by leading Harvard Business School faculty and is delivered in an active learning environment based on the HBS signature case-based learning model. MsC in Computer Science 2012 Instituto Superior Tecnico, Lisbon Advanced knowledge of distributed systems and software engineering, namely in the development of scalable distributed internet applications and advanced programming. Knowledge in the areas of software project management, multimedia content production, artificial intelligence, and mobile computing. BsC in Computer Science 2010 Instituto Superior Tecnico, Lisbon Fundamental principles of computer science applied to the development of scalable, efficient, and robust solutions. Knowledge in several areas of computer science, namely databases, data structures, object-oriented programming, networks, distributed systems, graphical computation, and artificial intelligence. ","date":"13 June 2022","permalink":"/experience/","section":"Nuno Coração","summary":"Experience Docker Staff Product Manager 2022 - Present Working on Customer Success team with the mission to ensure the successful onboarding of Docker users across our products. Truphone Group Product Manager 2021 - 2022 Leading a Product Management team under the Connect Group, encompassing different areas from its main products like Connect API CaaS platform and IoT Portal to general areas like data, pricing, and eSIM connectivity.","title":"Experience"},{"content":"I’ve been building and shipping products across multiple roles and industries, from video streaming applications to API platforms. As a product person, my main goal is to understand my users and their specific needs, in order to deliver a product that truly improves their lives.\nI’ve worked for several years in big companies and recently decided to trade that for the opportunity of working in smaller teams. Definitely prefer the latter where one can succeed/fail faster, learn faster, and overall have a way bigger impact.\nCurrently, I am focused on improving the lives of developers worldwide. I’m trying to write more about my previous experiences / random thoughts and would love to gather your feedback on it. I also love to dedicate my time to helping and mentoring other PMs or people that want to get into product.\nRecently I’ve also joined AWS Loft to help Startups and their founders with their product strategy.\nFeel free to reach out.\n","date":"13 June 2022","permalink":"/about/","section":"Nuno Coração","summary":"I’ve been building and shipping products across multiple roles and industries, from video streaming applications to API platforms. As a product person, my main goal is to understand my users and their specific needs, in order to deliver a product that truly improves their lives.","title":"About"},{"content":" Nintendo achieved something truly amazing with the launch of the Switch. It was able to disrupt itself and the entire gaming industry while saving itself from doom. How exactly was Nintendo able to do it and what comes next in that story?\nA Little History\u0026hellip; # Nintendo is a Japanese multinational consumer electronics and video game company with headquarters in Kyoto, Japan. In its annual report for 2021, the company reported a revenue of $16 billion (¥1,759 trillion) and it currently employs around six thousand people around the world across several different business units.\nNintendo was founded in 1889 as a company that produced and distributed hanafuda, a traditional Japanese card game. During the first half of the 1900s, the company tried to diversify into several different markets with little to no success (e.g. instant rice, love hotels, and a taxi service). During the 60s to 80s, Nintendo started investing in games, electronic toys, and gaming entertainment.\nAll of these investments culminated in the 90s with the launch of the Super Nintendo Entertainment System which sold around 50 million units worldwide and helped the company enter the US market. By then Nintendo had built several valuable assets in hardware, software, and intellectual property (including the most famous plumber that ever lived, Mario).\nAfter the Super Nintendo, the company continued to release new games and gaming devices throughout the 90s and into the 00s, including the Gameboy, Nintendo 64, GameCube, and the Wii in 2006, which contributed to make Nintendo a force to be reckoned in the gaming industry with net sales that peaked at $18 billion in 2009.\nNinento Net Sales from 2009 to 2021 In 2010, the previous generation of hardware Wii was approaching the end of its life cycle and coincidentally the company’s annual net sales started dropping. At the end of 2012 the company launched its next-generation gaming console that would replace the Wii, the Wii U. However, the Wii U was a commercial failure and never got a real foothold in the console market selling less than 15 million units worldwide. The platform was described as expensive, confusing and was never able to attract support from either hardcore nor casual customers leading to Nintendo\u0026rsquo;s sales eventually plummeting to just $4 billion in 2017.\n2017 was also the same year the company was able to disrupt itself and the entire gaming industry with the launch of the Nintendo Switch which until today sold more than 89 million units worldwide, led to a reported $16 billion net sales in 2021, and ultimately contributed to save Nintendo and establish it once again as one of the biggest players in the game industry.\nThe Switch\u0026rsquo;s Disruption # The Switch entered the market as the first console that was built from the ground up to provide a hybrid experience between mobile and living room gaming (or at least the first one that was actually able to deliver that experience). This hybrid setup allowed Nintendo to create different gaming modes from connecting the Switch to a TV using a dock, to connecting the controls to the main unit and taking it to play on the go. Additionally, the actual remote of the console can be used as two separate controlling devices which allows two players to enjoy a game at once. All these different modes and combinations made the switch a super attractive console for families and casual gamers since it was an affordable and flexible option when compared to the rest of the hardware available.\nA problem that Nintendo had to solve was the fact that launching a gaming console entails an interdependency between the actual hardware and its games. Or in other words, a console is only as valuable as the catalog of games available for it. To solve this problem, Nintendo adopted an integrated strategy in order to launch the Switch with a great catalog of games focusing on the same segment that the hardware features of the console were targeting. Nintendo developed several of the initial games and leveraged its valuable intellectual property of characters and stories to sell the Switch i.e. Mario, Zelda, etc.\nThe Switch is a traditional example of a new-market disruption. Nintendo was targeting casual gamers (non-consumption for the traditional gaming industry) by offering a product that was inferior when compared to the other consoles in the market using the metrics from that time (graphics power, storage, etc) but superior when using the new set of metrics important to the new segment (fun, flexible, casual, affordable, etc). The fact that the Switch was not a super powerful device led to Sony and Microsoft not seeing Nintendo as a real competitor since their performance metrics were focused on high-end gamers and AAA titles. This created an asymmetric motivation, meaning that the incumbent companies simply conceded that market to Nintendo as it was not interesting for them. Ultimately, Nintendo gained market share with the Switch selling over 80 million units worldwide. At the moment other players still do not have the incentives to compete in that market and even if they did, they would not be able to because neither of them is competing on the same performance metrics as the Switch nor with the same organization and business structure that would allow them to succeed.\nIn July 2019, Nintendo decided to launch a cheaper version of the product called the Switch Lite, this was a clear example of the company disrupting itself. Namely, Nintendo created a low-end disruption over its own product by creating a cheaper “good enough” product that targets over-served customers of the original Switch. This created a strong foothold on the low-end market for video games which is hard to compete against.\nCurrently, Nintendo and the Switch are in a phase of sustaining innovation where incremental performance improvements in attributes are provided to the more valuable/demanding customers in the market. The proof of this is the next version of the console, due to launch in October 2021, the Nintendo Switch OLED, which is basically the same as the current Switch with a bigger screen, bigger battery, and more internal storage. This makes complete sense from a strategic point of view, after defining and deploying such a successful product, Nintendo is focusing on a deliberate strategy to grow its market share and meet the needs of its best customers in order to beat the competition, not that there is actually one at the time.\nWhat\u0026rsquo;s Next for Nintendo and the Switch? # Currently, the Switch is already the 7th best selling console of all time and the 2nd best selling handheld gaming device of all time with 89 million units sold worldwide. Considering just the consoles still in the market, the Switch has already become the number 2 device in just 4 years.\nIt is expected that, for the time being, Nintendo will retain its position in the market and keep evolving the Switch and its ecosystem with new incremental improvements. Companies like Sony and Microsoft which are targeting the high-end gamer segment will not be able to compete with Nintendo due to the humongous differences in the structures of their businesses and organization. Moreover, the other organizations also do not have any incentive to try to compete in the same market as Nintendo because, from their point of view, it is a lower margin market than the one they already have which creates an asymmetric motivation for them to flee up, conceding the low-end without fighting over it. Finally, Nintendo will have a huge advantage over new competitors that tackle its segment and it has every motivation to fight the entrance of new players into its space.\nHowever, there are still points that might require course correction to avoid potential future problems. The first one is the lack of traction from other game developers and publishers in respect to the Switch. Looking at the list of the top 10 best-selling games for the platform only 2 were not developed by Nintendo or one of its subsidiaries. The Switch developer experience has a low barrier to entry (each dev kit costing around $450) but there is a 30% “tax” on each game sold taken from the developers/publishers by Nintendo. The company could potentially look at their developer relationships and explore ways to improve the business model to get a bigger catalog of games faster. A couple of examples would be to help promote games via their channels, or the creation of an indie games program to help and promote smaller companies. Ultimately, this means that in order to grow Nintendo needs to move away from its integrated strategy into a specialized one where it focuses on the most important pieces of the system and in delivering it perfectly i.e. the console, the store, and its IP. But for that, it needs to ensure the right level of modularity so that other developers and publishers can thrive in that space.\nAnother issue with the Switch is the lack of non-gaming applications available in the device that leads to a clash with the main Job-To-Be-Done for the product, “I want entertainment for me and my family”. The Switch has the potential to be the central hub for family entertainment, however, only three video streaming applications are available on the platform: Hulu, Youtube, and Funimation. Working with companies that provide other types of entertainment like Netflix and Disney and helping them launch those services on the Switch would be a great opportunity for Nintendo to improve the feature set of the device and better serve its users.\nRegarding the future, Nintendo is clearly betting on game streaming as a way to move up in the market and disrupt yet again the other players. This would be a great technology to drive the next round of low-end disruption by offering a cheaper way to play AAA games without having to own expensive hardware and upgrade it every one or two years. However, creating its own streaming service might not be the best strategy, Nintendo should look into making its system more modular and potentially partnering with other companies like Google Stadia to get access to streaming capabilities and an existing catalog of games right away.\nUltimately, the common factor across all of Nintendo’s decisions and actions has been the ability to focus on understanding and delivering against the underlying Job-To-Be-Done for its customers. The company was able to understand that the gaming experience could solve the problem (or “job”) of family or party entertainment as well as the standard problems customers hire a gaming device to solve (i.e. play games). By organizing the entire company around these jobs, Nintendo created the ability to target non-consumption and attract a completely different segment of users to its products. Moreover, by implementing an integrated strategy that delivered new hardware, developed new games, and leveraged family-friendly characters known around the world, Nintendo was able to deliver a perfect solution for the job and completely disrupt the gaming industry. In my view, this relentless focus on the customer and how to best solve its problem is why Nintendo has become a Purpose Brand that focuses on providing great family fun and entertainment using technology.\nReferences # Henderson, Rik. “What is Nintendo Switch Cloud Streaming, how does it work and what Cloud Version games are there?” Pocket-Lint\nHerold, Charles. “10 Reasons the Wii U Was a Failure.” Lifewire.\nNintendo. “Nintendo Annual Report FY 2021.”\nOrland, Kyle. “What the “OLED Model” means for the future of Nintendo Switch.” ARS Technica.\nPeckham, Matt. “19 Things Nintendo\u0026rsquo;s President Told Us About Switch and More.” Time.\nStatista. “Nintendo\u0026rsquo;s net sales from fiscal 2008 to 2021.”\nWikipedia. “List of best-selling game consoles.”\nWikipedia. “List of best-selling Nintendo Switch video games.”\n","date":"9 September 2021","permalink":"/posts/202109-the-future-of-nintendo/","section":"Posts","summary":"Nintendo achieved something truly amazing with the launch of the Switch. It was able to disrupt itself and the entire gaming industry while saving itself from doom. How exactly was Nintendo able to do it and what comes next in that story?","title":"The Future of the Nintendo Switch"}]
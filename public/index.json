[{"content":" This article was originally published externally, read the original here. Docker Hub’s Export Members functionality is now available, giving you the ability to export a full list of all your Docker users into a single CSV file. The file will contain their username, full name, and email address — as well as the user’s current status and if the user belongs to a given team. If you’re an administrator, that means you can quickly view your entire organization’s usage of Docker.\nIn the Members Tab, you can download a CSV file by pressing the Export members button. The file can be used to verify user status, confirm team structure, and quickly audit Docker usage.\nThe Export Members feature is only available for Docker Business subscribers. This feature will help organizations better track their utilization of Docker, while also simplifying the steps needed for an administrator to review their users within Docker Hub.\nAt Docker, we continually listen to our customers, and strive to build the tools needed to make them successful. Feel free to check out our public roadmap and leave feedback or requests for more features like this!\nLearn more about exporting users on our docs page, or sign in to your Docker Hub account to try it for yourself.\n","date":"19 September 2022","permalink":"/posts/202209-export-members/","section":"Posts","summary":"Find out how Docker Business admins can export members to track their utilization of Docker and audit Docker usage.","title":"Announcing Docker Hub Export Members"},{"content":"","date":"19 September 2022","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"19 September 2022","permalink":"/tags/docker/","section":"Tags","summary":"","title":"Docker"},{"content":"","date":"19 September 2022","permalink":"/categories/docker/","section":"Categories","summary":"","title":"Docker"},{"content":"","date":"19 September 2022","permalink":"/tags/docker-hub/","section":"Tags","summary":"","title":"Docker Hub"},{"content":"","date":"19 September 2022","permalink":"/tags/feature/","section":"Tags","summary":"","title":"Feature"},{"content":"","date":"19 September 2022","permalink":"/","section":"Nuno Coração","summary":"","title":"Nuno Coração"},{"content":"","date":"19 September 2022","permalink":"/tags/product/","section":"Tags","summary":"","title":"Product"},{"content":"","date":"19 September 2022","permalink":"/categories/product/","section":"Categories","summary":"","title":"Product"},{"content":"","date":"19 September 2022","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"4 September 2022","permalink":"/tags/amazon/","section":"Tags","summary":"","title":"Amazon"},{"content":"","date":"4 September 2022","permalink":"/tags/apple/","section":"Tags","summary":"","title":"Apple"},{"content":"","date":"4 September 2022","permalink":"/tags/disney/","section":"Tags","summary":"","title":"Disney"},{"content":"","date":"4 September 2022","permalink":"/tags/netflix/","section":"Tags","summary":"","title":"Netflix"},{"content":"","date":"4 September 2022","permalink":"/tags/prediction/","section":"Tags","summary":"","title":"Prediction"},{"content":"","date":"4 September 2022","permalink":"/tags/strategy/","section":"Tags","summary":"","title":"Strategy"},{"content":"","date":"4 September 2022","permalink":"/categories/strategy/","section":"Categories","summary":"","title":"Strategy"},{"content":"","date":"4 September 2022","permalink":"/tags/streaming/","section":"Tags","summary":"","title":"Streaming"},{"content":" Last July and for the first time ever, streaming viewership surpassed cable. The streaming wars began around 2010 when Netflix introduced their first streaming-only plan with no DVD rentals, other players (cough, cough… Blockbuster) laughed at the time… little did they know. A decade after, there’s a multitude of streaming services available for mainstream entertainment and also for specific niches (e.g., Curiosity Stream - documentaries, Crunchyroll - anime, etc.).\nHow Did We Get Here? # This question could turn into its series of posts, aka a very long and boring answer. The short version, Netflix hit gold when they launched their streaming-only subscription service that allowed customers to watch what they wanted when they wanted. This was a massive shift from the linear TV experience where you either had to wait in front of the TV to watch your favorite show, record and watch it later, or wait for a rerun (fun fact: there was another option to set a reminder to watch your shows :D). Not only did Netflix launch a way better product to consume content, but it also changed the way users discovered new series and movies by recommending new shows based on previous history. Users flocked to this service, which was significantly better than the alternatives and also cheaper than the average cable subscription at the time (i.e., cutting the chord).\nAfter Netflix showed everyone how people really wanted to consume content, several players were interested in replicating that model themselves. Traditional content producers (e.g., HBO, Disney, etc.) saw a way to control their distribution channel and get a direct relationship with their customers. Other players, like Apple and Amazon, saw a good opportunity to expand their service subscription strategy by offering yet-another-service to their user-base. This year, most of these services reached hundreds of millions of paying users, and the competition in this industry was never been this strong.\nMassive Investment in Content # One of the strong signals of this competition is the huge amounts of money being spent in content production. HBO just released House of the Dragon, a prequel to their hit series Game of Thrones. The first season had an estimated production cost of just under $20 million per episode, making the 10 episode run cost a full $200 million. In comparison, Game of Thrones cost around $100 million per season, with the average cost per episode starting around $6 million in season 1 and going up to $15 million in the final season. This means HBO just invested roughly double what it did in the last season of Game of Thrones.\nAmazon, coincidentally, also decided to launch its prequel of a super-loved property in the fantasy drama space, Lord of the Rings. Investment in the new series, called Lord of the Rings: The Rings of Power, is estimated to be around $1 billion. Amazon bought the franchise rights to Lord of the Rings for $250 million and invested $465 million to produce the eight-episode first season of the show. In comparison, the entire trilogy of the Lord of the Rings was produced for roughly $300 million, $100 million for each movie.\nNetflix has been increasing its costs with content production in the last years, arriving at $17 billion this year. Disney is set to spend even more than that, $32 billion (even after cuts). In a different space, big tech companies are also getting into live sports. All of this spending creates a super competitive environment across all services, which is not necessarily in the best interest of the viewers.\nQuality is Decreasing # One could argue that all the investment and all the money being thrown at content production will bring the golden age of entertainment. However, as most big investments, they are made to make someone money. In the entertainment industry, one of the ways to reduce risk is to invest in properties that have already proven their value in opposition to new Intellectual Property (IP).\nThe levels of “content pumping” that we are seeing nowadays lead to a massive decrease in quality, and worse, viewer fatigue. Especially since it is focused on a minimal set of genres (i.e., fantasy, hero movies, etc.) and franchises (i.e., Marvel Cinematic Universe, DC Cinematic Universe, Star Wars, Fast and the Furious, etc.)\nMore Money In… More Money Out # When a company increases costs, usually the aim is to increase revenue and profit. Streaming services charge a fixed fee per month. Therefore, it doesn’t really matter how much or how little you loved the next big fantasy drama series from your favorite streaming provider – they will make the same amount of money from you.\nUnless… streaming companies increase subscription prices and find new ways to monetize content. Aided by the excuse of inflation, most services have increased their prices in the last year. Specifically, Disney+ subscription in the U.S. will rise from $7.99 to $10.99, while Hulu\u0026rsquo;s ad-free offering will jump from $12.99 per month to $14.99 per month. Netflix cheapest plan increased to $9.99, with the top one at $20.00. Additionally, executives from most of these big companies are also planning to roll out ads for their services. Yes, even Netflix that resisted for years cannot keep ignoring that option when faced with competition.\nUltimately, this is a worse product for the user. Price increases could make the overall cost of streaming services too high for some users, which will force a choice of which services to keep. Furthermore, you will get ads again, or you can pay more if you would rather not see them.\nWhat Happens Next? # The high levels of competition have begun to generate frustration among users. Users are starting to get fatigued with the low-quality and constant recycling of content (I swear, I am uncertain whether I can handle yet another Marvel Movie or Star Wars trilogy). The increase in prices, especially in the current economic situation, will force users to choose which services to pay for, if any. And ultimately, competition for user’s attention has never been so high. Social networks like Twitter, Instagram, and TikTok take hours of engagement daily out of each user. Video game investment has never been so high, with so many options of games and consoles.\nIn my opinion, the streaming wars have already peaked, and we’ll see a change in the upcoming years before getting to a new equilibrium. I think that one out of three things will happen:\nHorizontal Expansion - current streaming services would need to expand to provide additional services and bundle them together. This would increase the value for money and could be interesting to some users depending on what is being bundled. Netflix has begun doing this with games. Companies like Amazon and Apple came into streaming exactly for this reason, expanding into streaming even if it was not their core business. Aggregation - One service to rule them all… If one of the existing services, or a new player, can aggregate content from several players at a lower price point, this could create a captivating value proposition for customers on the lower end. This option seems highly unlikely, this was Netflix play years ago, and it didn’t work, potentially because they were greedy. Nevertheless, in the current scenario, it is highly unlikely that big players would share rights with another VS getting exclusivity on those. Merges and Acquisitions - Big fish eats smaller fish. This is bound to happen at some point, it’s just a matter of time and which company will acquire which company for what amount of money. It’s not clear if this will be good or bad for customers, depending on who starts playing together. My prediction is that ultimately, big tech companies like Amazon or Apple will begin acquiring other smaller players. These companies come into streaming as a horizontal expansion from their core businesses. Both are armed with an order of magnitude more revenues than their content only counterparts. As an example, in 2021 Disney’s revenue was $81.10 billion and Netflix\u0026rsquo;s was $24.9 billion. In comparison, Apple’s revenue in the same year was $378.32 billion and Amazon’s was $468.82 billion. With this kind of “war chest” plus their own core business (Apple devices, and Amazon e-commerce business) it will be way easier for these companies to step in when they want to.\n","date":"4 September 2022","permalink":"/posts/202209-streaming-wars/","section":"Posts","summary":"Last July and for the first time ever, streaming viewership surpassed cable. The streaming wars began around 2010 when Netflix introduced their first streaming-only plan with no DVD rentals, other players laughed at the time… little did they know. A decade after, there’s a multitude of streaming services available for mainstream entertainment and also for specific niches. What will happen next?","title":"Streaming Wars and What Comes After… "},{"content":"","date":"4 September 2022","permalink":"/tags/wars/","section":"Tags","summary":"","title":"Wars"},{"content":" This article was originally published externally, read the original here. Docker’s goal is to create a world-class product experience for our customers. We want to build a robust product that will help all teams achieve their goals. In line with that, we’ve tried to simplify the process of onboarding your team into the Docker ecosystem with our Bulk User Add feature for Docker Business and Docker Team subscriptions.\nYou can invite your team to their accounts by uploading a file including their email addresses to Docker Hub. The CSV file can either be a file you create for this specific purpose, or one that’s extracted from another in-house system. The sole requirement is that the file contains a column with the email addresses of the users that will be invited into Docker. Once the CSV file is uploaded using Docker Hub, each team member in the file will receive an invitation to use their account.\nWe’ve also updated Docker Hub’s web interface to add multiple members at once. We hope this is useful for smaller teams that can just copy and paste a list of emails directly in the web interface and onboard everyone they need. Once your team is invited, you can see both the pending and accepted invites through Docker Hub.\nBulk User Add can be used without needing to have SSO setup for your organization. This feature allows you to get the most out of your Docker Team or Business subscription, and it greatly simplifies the onboarding process.\nLearn more about the feature on our docs page, and sign in to your Docker Hub account to try it for yourself.\nAnd if you have any questions or would like to discuss this feature, please attend our upcoming\n","date":"27 July 2022","permalink":"/posts/202207-docker-bulk-add/","section":"Posts","summary":"Forget manually inviting team members to Docker Desktop. With Bulk Add for Docker Business, invite your entire team with a CSV file or their Docker IDs!","title":"Bulk User Add for Docker Business and Teams"},{"content":"","date":"27 June 2022","permalink":"/tags/congo/","section":"Tags","summary":"","title":"Congo"},{"content":"","date":"27 June 2022","permalink":"/tags/development/","section":"Tags","summary":"","title":"Development"},{"content":"","date":"27 June 2022","permalink":"/categories/development/","section":"Categories","summary":"","title":"Development"},{"content":"","date":"27 June 2022","permalink":"/tags/environment/","section":"Tags","summary":"","title":"Environment"},{"content":"","date":"27 June 2022","permalink":"/tags/go/","section":"Tags","summary":"","title":"Go"},{"content":" TL;DR # Currently, there are several solutions to build and host your personal website. I wanted to challenge myself to see if I could do it with the same set of features as some of the paid solutions out there and for free. Here are the results.\nWhy would a PM build their own homepage from scratch… # A couple of months ago I decided that I wanted to start writing more in order to a) exercise my writing skills and b) get feedback on some of my ideas. With this goal in mind, I started researching tools/platforms that would help me publish without creating too much friction for me, or for the people wanting to read what I have to say e.g. having to pay. Ultimately I decided upon creating my own website.\nI had a couple of reasons for wanting to try this:\nchallenge me to see if I, a previous software engineering student, could still bodge something together that would work and feel good about not having forgotten everything I ever learned about programming,\nfind a flexible free solution that would allow me to kickstart my website without investing money right away into it, aka avoiding operational costs with platforms and services that would lock me in the future,\nhave my content hosted in a place that will not require people to pay for reading it,\nplay around with Docker\u0026rsquo;s developer environments and Microsoft\u0026rsquo;s developer containers to get myself familiar with both solutions.\nLet’s get started… # After some research, I decided to choose a website generator framework and a free hosting service. For the website framework, I choose Hugo with Congo as the theme, and for the hosting service Firebase. And for obvious reasons, I decided to set up my development environment using Docker in order to put myself in the user\u0026rsquo;s shoes for this experiment.\nI didn\u0026rsquo;t go into a deep analysis of which framework was the best for my problem as I wanted to get an MVP out fast so I went through a couple of options and picked the first one that I liked. There are several other options with different features and approaches from the one I picked. If you want to explore other options these are some you can explore: Docussaurus, Gatsby, Jekyll, Ghost, and even WordPress. The same is applicable to the hosting part, even though I chose Firebase there are other solutions like Cloudflare Pages, GitHub Pages, Digital Ocean, Netlify, Vercel, and others that you might consider exploring. If you have any suggestions for this guide feel free to reach out, always happy to chat and learn.\nTools # For this guide, I will use the following tools, which should be installed on your machine. Here is a small explanation of what each component is going to be used for and a link to the installation instructions.\nDocker - I will use Docker to configure a development environment for this project so that we can skip the need to install all the software required to run Hugo and Firebase CLI i.e. cURL, Go, Hugo, Node, NPM, etc. This will allow you to start from a git repository, start the environment and go straight into writing code instead of spending hours figuring out how to install a specific compiler for your CPU architecture. Install Docker\nVisual Studio Code - I\u0026rsquo;m using Visual Studio Code as my code editor at the moment, and all the material in the guide assumes that this is what you\u0026rsquo;re using. If you have a different preference you’ll need to adapt some parts of this guide to achieve the same results. Install Visual Studio Code\nSetup the Development Environment # Let\u0026rsquo;s start by configuring your development environment using Docker. This will allow you to create a container with all the tools you need inside of it without having to mess with your system configurations. Moreover, it will also make it easier to just delete the container and rebuild it whenever you need it instead of keeping old versions of software you don\u0026rsquo;t require daily in your personal machine.\nNote: If you just want to clone a repo with the final skeleton feel free to clone this repo and skip to the deploy section I\u0026rsquo;ll provide two ways of setting up your development environment feel free to choose the one you prefer or try both to explore the differences between them. Both options rely on a Dockerfile built by me which uses klakegg/hugo:0.93.2-ubuntu as the base image, even though this is not Hugo\u0026rsquo;s official image (since there isn\u0026rsquo;t one at the moment) it\u0026rsquo;s the one recommended on their website,.\nUsing Docker # To spin up a Dev Environment just open Docker Dashboard and select the \u0026ldquo;Dev Environments\u0026rdquo; tab on the left. If you don\u0026rsquo;t have any dev environments setup select \u0026ldquo;Create New Environment\u0026rdquo; otherwise use the button on the upper right side \u0026ldquo;Create\u0026rdquo;. Proceed to the setup step.\nHere choose the \u0026ldquo;Existing Git repo\u0026rdquo; option and use the following GitHub URL:\nhttps://github.com/nunocoracao/homepage-kickstart Note: If you clone the repo locally you can also start from the local folder Once the container is running you should see something similar to the images below.\nIn both situations, you will be able to see and click the button \u0026ldquo;Open in VSCode\u0026rdquo; which will open the editor and will allow you to start working. From there open a terminal and proceed to create the site skeleton\nUsing Visual Studio Code # Start by cloning the GitHub repository with the development environment configurations.\ngit clone https://github.com/nunocoracao/homepage-kickstart This method requires the installation of an extra VSCode extension in order to spin up the containers. Please search for Remote - Containers and install the extension to continue this guide.\nAfter successfully installing the extension, open your source folder in VSCode and open the “Remote - Containers” extension panel on the left. Select \u0026ldquo;Open Folder in Container\u0026rdquo; to spin up a container with the development environment.\nWait a couple of minutes while the image is built. Docker is creating an image with all the required software for the development of the website. This will only happen the first time you spin the environment.\nOnce the image is built, VSCode will spin the container and will place your working environment inside of it (information available in the bottom left corner of the window). You now have a development environment with Go, Hugo, Firebase CLI, and all the tools you will need for this guide. Just open a new terminal and you’re ready to begin creating your site.\n\u0026hellip;but I really want to run everything locally # If you either prefer or need to run your environment locally follow the guides below to install everything you need for your setup:\nHomebrew - Install homebrew Hugo - Install Hugo Node.js and NPM - Install node.js \u0026amp; NPM (easier to install Firebase CLI) Firebase CLI - Install Firebase CLI Create Site Skeleton # Now that we have a development environment running the first step is to create the base version of your website. For this let’s use Hugo to generate the folder template and configuration files we need by running the following command (--force parameter is required to run Hugo on a non-empty directory):\nhugo new site . --force This should have created a set of folders inside your workspace that you don’t need to worry about for now. The next step is to install a theme for Hugo. I choose Congo as it had all the features I required for my website and it seemed to be easy to change if I ever need it to. If you want to try a different theme there are several available in Hugo’s documentation, each with documentation and examples.\nInstall Congo using git submodules by running the following command:\ngit submodule add -b stable https://github.com/jpanther/congo.git themes/congo Now we need to make some changes to the directory and file structure so that Congo can work properly. I will not get into the details of what is happening in this guide (you can consult Congo’s documentation if you want to learn more), the main takeaway is that we’re creating and configuring a folder in config/_default/ which will contain all the important configuration files for Hugo and Congo.\nPlease run the following commands in order:\nmkdir -p config/_default rm config.toml cp themes/congo/config/_default/*.toml config/_default/ echo \u0026#39;theme = \u0026#34;congo\u0026#34;\u0026#39; | cat - config/_default/config.toml \u0026gt; temp \u0026amp;\u0026amp; mv temp config/_default/config.toml Congratulations, you should have your site up and running now. Let\u0026rsquo;s try it out by running Hugo\u0026rsquo;s debug server:\nhugo server -D Please open your favorite browser and navigate to localhost:1313 to see your page.\nYou should see something similar to the image above. Doesn’t look that exciting, does it? Let’s configure the theme in the next sections and learn how to create your first article.\nConfigure Theme # Now I’ll be covering how to change the look and feel of your website, add some personal information, and activate the dark mode toggle (aka the most important feature in any website these days).\nA note, I am covering a very simple configuration for this theme please check Congo’s theme documentation to understand everything you can do with this theme. Profile picture # Let’s start by adding a profile picture to your site. Create a folder called “assets” at the root of your project. Choose a profile picture and place it inside the assets folder. The rest of the guide will assume the final picture is named \u0026ldquo;profile.jpg\u0026rdquo;, so please rename your picture or take that into account when configuring some of the other files.\nIf you still need to take a proper awesome picture for this feel free to download this one to proceed with the tutorial. Configuration Files # Let’s open a couple of configuration files and start updating them. All the files we are going to change are inside config/_default/ folder.\nconfig.toml # Uncomment the baseURL parameter and replace it with the final domain of your website. This value will be used to create the robots.txt file for any search engines to successfully crawl and index your website.\nNote: if you want to configure Google Analytics please add the following line with your id to this file googleAnalytics = \u0026quot;G-XXXXXX\u0026quot; languages.en.toml # This file will drive the main information for the website and the author of the page (you). Replace the title and description for the ones you want for your page, these values will drive the HTML title and description tags.\nWithin the [author] block you can update the details that you wish to highlight in your profile. The bare minimum would be name, image, headline, and links. For the links parameter don\u0026rsquo;t forget to uncomment the last line of the file as this is a json array. Update each entry with your personal links.\nparams.toml # This file defines much of the overall behavior across the entire framework. For this tutorial I changed some of the overall values and one for the homepage, if you want to learn more about the other available configurations please consult Congo’s theme documentation.\nI\u0026rsquo;ve changed colorScheme to \u0026ldquo;ocean\u0026rdquo; which changes the global UI theme. Congo defines a three-color palette that is used throughout the theme. Valid values are congo (default), avocado, ocean, fire, and slate. Although these are the default schemes, you can also create your own. Refer to the theme\u0026rsquo;s main documentation to learn how.\nActivated showAppearanceSwitcher to enable the light/dark mode toggle. Activated enableSearch which indexes all future posts each time you build the site and provides a simple search feature. I\u0026rsquo;ve also changed the value of layout, inside [homepage], to \u0026ldquo;profile\u0026rdquo; which changes the way the landing page is rendered. Finally, the last interesting value here is showRecent, which when turned on shows the recent posts on the homepage.\nFinal # Let’s see how it looks, run the Hugo again:\nhugo server -D And navigate to localhost:1313 you should see something similar to the page below.\nCongrats it’s looking great, let’s learn how to generate your first articles.\nHow to generate articles # Hugo provides some tools to generate your articles (markdown files) with a base set of tags already in them. Run the following command to create your first post\nhugo new posts/my-first-post.md replace the contents of the file with the following:\n--- title: \u0026#34;My Published Post\u0026#34; date: 2022-06-19T20:10:29Z draft: false categories: [\u0026#34;published\u0026#34;, \u0026#34;test\u0026#34;] tags: [\u0026#34;first\u0026#34;, \u0026#34;awesome\u0026#34;] --- This is my first blog post This just created your first blog post. We\u0026rsquo;ve added a couple of categories and tags, which will be indexed by Hugo during build time. These tags will be used to create the Categories and Tags section of the website automatically for you. Notice that I\u0026rsquo;ve changed the draft to false to simulate a published post.\nRun the following command to create your second post\nhugo new posts/my-draft-post.md and replace the contents of that file with the following:\n--- title: \u0026#34;My Draft Post\u0026#34; date: 2022-06-19T20:20:39Z draft: true categories: [\u0026#34;draft\u0026#34;, \u0026#34;test\u0026#34;] tags: [\u0026#34;second\u0026#34;, \u0026#34;awesome\u0026#34;] --- This is my second blog post For the second post, I\u0026rsquo;ve left the draft parameter true to simulate a draft post.\nHugo automatically hides draft posts from the final site generation. You can keep working on articles leaving the draft label true and they will be ignored by the engine. If you want to run in DEBUG mode just use the command:\nhugo server -D If you go to the posts on the site you should be able to see both entries. If you then run the server in normal mode the draft articles will disappear. You can use the command below to do so:\nhugo server You can use this command to test the final version of the website or an article before generating the final build. When you\u0026rsquo;re ready just use the command \u0026lsquo;Hugo\u0026rsquo; to generate the final website inside the /public folder.\nhugo All files are written in Markdown which Hugo then uses to generate the final pages. I\u0026rsquo;ll not teach you how to write markdown files in this guide but I can recommend this \u0026ldquo;getting started\u0026rdquo; tutorial and this \u0026ldquo;cheat sheet\u0026rdquo; to get you started.\nDeploy # Ok, you’ve configured your website and created a couple of articles, but we still need to deploy it somewhere. As I mentioned before I chose Firebase for this guide, even though I know that it offers much more than just a simple hosting service it allows me to host my site for free without much of a hassle.\nCreate Firebase Project # Let’s start by going to https://firebase.google.com and creating an account. Once that is done you can create a project for free. The process should be straightforward and when you finish you should be in Firebase\u0026rsquo;s project dashboard.\nSetup Firebase # Now you can go back to your environment which already has Firebase CLI tools installed and ready to go. Let’s start by authenticating using:\nfirebase login Once you are successfully logged in you need to initiate the project configurations for firebase. For that please use:\nfirebase init The tool will offer you a wide variety of different options in order to configure your Firebase project. For now, we just want to configure hosting. If you are using GitHub, you might want to consider configuring GitHub action deploys which can automatically build and deploy your site every time there is a push to a specific branch or a merged pull request.\nChoose the Firebase project created before as the hosting destination. And select the configurations you wish for the deployment process. The important one here is the folder where the final files to the server will be placed and this is the public folder. For the other parameters you experiment with what better matches your use-case, the image below shows you what I picked (Note: for this tutorial I didn\u0026rsquo;t configure GitHub actions but I am using that in my real setup).\nDeploy # Ok, now for the long and boring process of deployment… joking! Once you are ready and have all your files generated by the hugo command in the public folder just use the following command to deploy:\nfirebase deploy The process should take a couple of seconds and there you go your site is deployed. The final line of the CLI tool will give you a URL to see for yourself, otherwise, you can explore your Firebase dashboard hosting section which will have more information regarding the deployment.\nConclusion # By now you should have a simple version of your website which you can configure to your needs. The main advantage of this solution is that it is flexible and extensible to a variety of different needs especially if you take the time to explore Hugo\u0026rsquo;s theme catalog. True that it might require some coding to implement complex but I would guess that this solves the problem for almost everyone.\nAbove all, it’s a completely free solution if you\u0026rsquo;re looking to start and can\u0026rsquo;t (or don\u0026rsquo;t want to) spend money. Hope this guide helps you, feel free to share it with your network and give me feedback so that I can make it better over time.\nResources # GitHub Repo for development environment GitHub Repo for base Hugo and Congo configuration GitHub Repo for base image Docker Hub image URL Hugo's Documentation Congo's Documentation Firebase Documentation Markdown Guide Markdown Getting Started\u0026quot; Markdown Cheat Sheet ","date":"27 June 2022","permalink":"/posts/202206-homepage-guide/","section":"Posts","summary":"Currently, there are several solutions to build and host your personal website. I wanted to challenge myself to see if I could do it with the same set of features as some of the paid solutions out there and for free. Here are the results.","title":"How I Created My Homepage (for free) Using Docker, Hugo, and Firebase"},{"content":"","date":"27 June 2022","permalink":"/tags/hugo/","section":"Tags","summary":"","title":"Hugo"},{"content":"","date":"27 June 2022","permalink":"/tags/tutorial/","section":"Tags","summary":"","title":"Tutorial"},{"content":"","date":"27 June 2022","permalink":"/categories/tutorial/","section":"Categories","summary":"","title":"Tutorial"},{"content":"","date":"27 June 2022","permalink":"/tags/vscode/","section":"Tags","summary":"","title":"VSCode"},{"content":"","date":"26 June 2022","permalink":"/tags/interview/","section":"Tags","summary":"","title":"Interview"},{"content":"","date":"26 June 2022","permalink":"/categories/interview/","section":"Categories","summary":"","title":"Interview"},{"content":"","date":"26 June 2022","permalink":"/tags/mentorcruise/","section":"Tags","summary":"","title":"Mentorcruise"},{"content":"","date":"26 June 2022","permalink":"/tags/mentorship/","section":"Tags","summary":"","title":"Mentorship"},{"content":"","date":"26 June 2022","permalink":"/categories/mentorship/","section":"Categories","summary":"","title":"Mentorship"},{"content":" This article was originally published externally, read the original here. I’ve been building and shipping products across multiple roles and industries, from video streaming applications to API platforms.\nWhy did you decide to become a mentor? # Throughout my career, I was fortunate enough to find (or be found by) amazing mentors that helped me in several different ways. Some provided advice for professional decisions and career management, others access to opportunities, and some just took me along for the ride to “watch \u0026amp; learn”. All of those contributed so much to make me a better professional and gave me some really interesting opportunities in my career. In the last few years, I started being a mentor myself and I am really enjoying the experience of helping others grow and fulfill their career dreams.\nWhat benefits did you gain from working with mentors early on? # The main benefit was the ability to tap into someone else’s experience and seniority and learn from their past experiences. It allowed me to get a glimpse of the future and accelerate some career milestones I wanted for myself. As an example, I never had the dream of working or living abroad, but after talking about it with my mentors (that had that experience) I learned so much about what it could bring me professionally and personally that when that opportunity came I was better prepared to make the right decision. Overall, it gave me the chance to learn how to become a better professional by watching how my mentors did it on a professional setting. Moreover, it gave me the chance to manage my career by tapping into their advice and experience in order to achieve my goals.\nHow did you get your career start? # My career started as a trainee in a telco company here in Portugal. I just left university and a junior researcher position to become a solutions architect for the TV department. It was amazing to get the first job with such responsibility and exposure to the entire organization. However, I have to say that the best part of that role was my manager who made an extra effort to coach and teach me so many invaluable lessons that I do still remember after so many years.\nGood advice is not “one-size-fits-all”\nHow do you usually set up mentorships? # I usually like to understand what are the person’s goals for the mentorship and depending on those design a specific plan. Independently of the goal, I aim to have a weekly 1:1 with each mentee to catch up on progress and see if there is anything that I can do to help with. I also like to have a log file in docs to track questions/actions/open points. What we do within this framework highly depends on the goals themselves. For example, if the mentee is looking for help in switching into a product role, I might help review the CV and LinkedIn profile and prepare them for interviews with material and mock sessions.\nWhat benefit can you provide to mentees over self-studying? # As with my own personal experience, the best benefit I can provide my mentees is to allow them to tap into my experiences, and the rational behind them, so that they can learn from it. I don’t mean to say they should do exactly as I did, no advice comes in a “one-size-fits-all” package. Moreover, I definitely made some mistakes along the way. But with that insight, each person can decide what resonates with them and what doesn’t in order to make their own decisions. In summary, I’m here to help with product topics and career management, specially people that want to get into product and don’t know where to start.\nWhat’s been your favourite mentorship story so far? # In one of my previous role I was managing two young professionals that joined the product team as QA Engineers. Both of them wanted to become Product Managers and were looking for ways to make that move happen. During one year I made an extra effort to share my experiences, give advice, and try to get them as many opportunities to have a “taste” of what PM is by getting them into meetings and brainstormings with my dev teams, shadow customer calls, attend meetings with management, etc. I was really happy the day I was able to sponsor both of them into their first PM roles still within the company. Since then it has been even more fulfilling to watch them grow and have their own successful careers in Product.\nWhat are you getting out of being a mentor? # From my experience, having access to mentors, allowed me to grow and improve at a professional and personal level faster than by myself. At this stage in my life, I feel like I’ve experienced enough to have something valuable to share with others and maybe help them achieve their goals. Ultimately, that is what I am aiming to get out of this experience, to be able to have the same impact as a mentor as my mentors had on me.\n","date":"26 June 2022","permalink":"/posts/202206-mentorcruise-interview/","section":"Posts","summary":"Nuno Coração is one of our professional mentors on MentorCruise and works as Staff Product Manager at Docker.","title":"Nuno Coração – Meet the Mentor"},{"content":"Experience Company Link Role Dates Location Docker Staff Product Manager 2022 - Present Full Remote Lisbon, PT AWS Startup Loft Startup Advisor 2022 - Present Full Remote Lisbon, PT Truphone Group Product Manager 2021 - 2022 Hybrid Lisbon, PT Senior Product Manager 2020 - 2021 Vodafone Group Analytics Squad Lead 2019 - 2020 Lisbon, PT London, UK Senior Product Manager 2018 - 2019 Sky Deutschland Senior Product Architect 2016 - 2018 Munich, DE Skimic Founder 2016 - 2017 Munich, DE Vodafone Group Product Manager 2015 - 2016 Lisbon, PTLondon, UK NOS Product Manager 2014 - 2015 Lisbon, PT Solutions Architect 2012 - 2014 Inesc-ID Junior Researcher 2011 - 2012 Lisbon, PT Education School Link Degree Date Harvard Business School Online Entrepreneurship Essentials 2022 Disruptive Strategy 2022 Tecnico Lisboa MSc in Computer Science - Distributed Systems 2012 BSc, Computer Science 2010 ","date":"13 June 2022","permalink":"/resume/","section":"Nuno Coração","summary":"Experience Company Link Role Dates Location Docker Staff Product Manager 2022 - Present Full Remote Lisbon, PT AWS Startup Loft Startup Advisor 2022 - Present Full Remote Lisbon, PT Truphone Group Product Manager 2021 - 2022 Hybrid Lisbon, PT Senior Product Manager 2020 - 2021 Vodafone Group Analytics Squad Lead 2019 - 2020 Lisbon, PT London, UK Senior Product Manager 2018 - 2019 Sky Deutschland Senior Product Architect 2016 - 2018 Munich, DE Skimic Founder 2016 - 2017 Munich, DE Vodafone Group Product Manager 2015 - 2016 Lisbon, PTLondon, UK NOS Product Manager 2014 - 2015 Lisbon, PT Solutions Architect 2012 - 2014 Inesc-ID Junior Researcher 2011 - 2012 Lisbon, PT Education School Link Degree Date Harvard Business School Online Entrepreneurship Essentials 2022 Disruptive Strategy 2022 Tecnico Lisboa MSc in Computer Science - Distributed Systems 2012 BSc, Computer Science 2010 ","title":"Resume"},{"content":"I’ve been building and shipping products across multiple roles and industries, from video streaming applications to API platforms. As a product person, my main goal is to understand my users and their specific needs, in order to deliver a product that truly improves their lives.\nI’ve worked for several years in big companies and recently decided to trade that for the opportunity of working in smaller teams. Definitely prefer the latter where one can succeed/fail faster, learn faster, and overall have a way bigger impact.\nCurrently, I am focused on improving the lives of developers worldwide. I’m trying to write more about my previous experiences / random thoughts and would love to gather your feedback on it. I also love to dedicate my time to helping and mentoring other PMs or people that want to get into product.\nRecently I’ve also joined AWS Loft to help Startups and their founders with their product strategy.\nFeel free to reach out.\n","date":"13 June 2022","permalink":"/about/","section":"Nuno Coração","summary":"I’ve been building and shipping products across multiple roles and industries, from video streaming applications to API platforms. As a product person, my main goal is to understand my users and their specific needs, in order to deliver a product that truly improves their lives.","title":"About"},{"content":"I started learning music by myself at the age of 14. I play several instruments and I love to record, compose and produce my own music. I\u0026rsquo;ve been releasing my songs under the name \u0026ldquo;Doppler Effect\u0026rdquo; in the usual streaming services. Here are the links if you want to listen.\nCover Title Released Listen Remember a New Day August 2022 Teardrop July 2022 The Devil Dances Tonight July 2022 Bellucci's Catwalk June 2022 Another Beginning June 2022 Blue in Green June 2022 Dreaming in Color January 2022 Sweet June September 2021 Walking Miles April 2021 A Different Kind of Tango April 2021 Burka April 2021 Smoking with a Ninja April 2021 ","date":"13 June 2022","permalink":"/music/","section":"Nuno Coração","summary":"I started learning music by myself at the age of 14. I play several instruments and I love to record, compose and produce my own music. I\u0026rsquo;ve been releasing my songs under the name \u0026ldquo;Doppler Effect\u0026rdquo; in the usual streaming services.","title":"Music"},{"content":"","date":"13 June 2022","permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"I always try to find time to work and learn something new. Usually, most of these pet-projects don\u0026rsquo;t see the light of day. They are, however, great opportunities to try something in the real world and learn from it.\nLogo Title Description Link Blowfish A powerful, lightweight theme for Hugo built with Tailwind CSS. site ","date":"13 June 2022","permalink":"/projects/","section":"Nuno Coração","summary":"I always try to find time to work and learn something new. Usually, most of these pet-projects don\u0026rsquo;t see the light of day. They are, however, great opportunities to try something in the real world and learn from it.","title":"Projects"},{"content":"","date":"9 September 2021","permalink":"/tags/disruption/","section":"Tags","summary":"","title":"Disruption"},{"content":"","date":"9 September 2021","permalink":"/tags/nintendo/","section":"Tags","summary":"","title":"Nintendo"},{"content":"","date":"9 September 2021","permalink":"/tags/switch/","section":"Tags","summary":"","title":"Switch"},{"content":" Nintendo achieved something truly amazing with the launch of the Switch. It was able to disrupt itself and the entire gaming industry while saving itself from doom. How exactly was Nintendo able to do it and what comes next in that story?\nA Little History\u0026hellip; # Nintendo is a Japanese multinational consumer electronics and video game company with headquarters in Kyoto, Japan. In its annual report for 2021, the company reported a revenue of $16 billion (¥1,759 trillion) and it currently employs around six thousand people around the world across several different business units.\nNintendo was founded in 1889 as a company that produced and distributed hanafuda, a traditional Japanese card game. During the first half of the 1900s, the company tried to diversify into several different markets with little to no success (e.g. instant rice, love hotels, and a taxi service). During the 60s to 80s, Nintendo started investing in games, electronic toys, and gaming entertainment.\nAll of these investments culminated in the 90s with the launch of the Super Nintendo Entertainment System which sold around 50 million units worldwide and helped the company enter the US market. By then Nintendo had built several valuable assets in hardware, software, and intellectual property (including the most famous plumber that ever lived, Mario).\nAfter the Super Nintendo, the company continued to release new games and gaming devices throughout the 90s and into the 00s, including the Gameboy, Nintendo 64, GameCube, and the Wii in 2006, which contributed to make Nintendo a force to be reckoned in the gaming industry with net sales that peaked at $18 billion in 2009.\nIn 2010, the previous generation of hardware Wii was approaching the end of its life cycle and coincidentally the company’s annual net sales started dropping. At the end of 2012 the company launched its next-generation gaming console that would replace the Wii, the Wii U. However, the Wii U was a commercial failure and never got a real foothold in the console market selling less than 15 million units worldwide. The platform was described as expensive, confusing and was never able to attract support from either hardcore nor casual customers leading to Nintendo\u0026rsquo;s sales eventually plummeting to just $4 billion in 2017.\n2017 was also the same year the company was able to disrupt itself and the entire gaming industry with the launch of the Nintendo Switch which until today sold more than 89 million units worldwide, led to a reported $16 billion net sales in 2021, and ultimately contributed to save Nintendo and establish it once again as one of the biggest players in the game industry.\nThe Switch\u0026rsquo;s Disruption # The Switch entered the market as the first console that was built from the ground up to provide a hybrid experience between mobile and living room gaming (or at least the first one that was actually able to deliver that experience). This hybrid setup allowed Nintendo to create different gaming modes from connecting the Switch to a TV using a dock, to connecting the controls to the main unit and taking it to play on the go. Additionally, the actual remote of the console can be used as two separate controlling devices which allows two players to enjoy a game at once. All these different modes and combinations made the switch a super attractive console for families and casual gamers since it was an affordable and flexible option when compared to the rest of the hardware available.\nA problem that Nintendo had to solve was the fact that launching a gaming console entails an interdependency between the actual hardware and its games. Or in other words, a console is only as valuable as the catalog of games available for it. To solve this problem, Nintendo adopted an integrated strategy in order to launch the Switch with a great catalog of games focusing on the same segment that the hardware features of the console were targeting. Nintendo developed several of the initial games and leveraged its valuable intellectual property of characters and stories to sell the Switch i.e. Mario, Zelda, etc.\nThe Switch is a traditional example of a new-market disruption. Nintendo was targeting casual gamers (non-consumption for the traditional gaming industry) by offering a product that was inferior when compared to the other consoles in the market using the metrics from that time (graphics power, storage, etc) but superior when using the new set of metrics important to the new segment (fun, flexible, casual, affordable, etc). The fact that the Switch was not a super powerful device led to Sony and Microsoft not seeing Nintendo as a real competitor since their performance metrics were focused on high-end gamers and AAA titles. This created an asymmetric motivation, meaning that the incumbent companies simply conceded that market to Nintendo as it was not interesting for them. Ultimately, Nintendo gained market share with the Switch selling over 80 million units worldwide. At the moment other players still do not have the incentives to compete in that market and even if they did, they would not be able to because neither of them is competing on the same performance metrics as the Switch nor with the same organization and business structure that would allow them to succeed.\nIn July 2019, Nintendo decided to launch a cheaper version of the product called the Switch Lite, this was a clear example of the company disrupting itself. Namely, Nintendo created a low-end disruption over its own product by creating a cheaper “good enough” product that targets over-served customers of the original Switch. This created a strong foothold on the low-end market for video games which is hard to compete against.\nCurrently, Nintendo and the Switch are in a phase of sustaining innovation where incremental performance improvements in attributes are provided to the more valuable/demanding customers in the market. The proof of this is the next version of the console, due to launch in October 2021, the Nintendo Switch OLED, which is basically the same as the current Switch with a bigger screen, bigger battery, and more internal storage. This makes complete sense from a strategic point of view, after defining and deploying such a successful product, Nintendo is focusing on a deliberate strategy to grow its market share and meet the needs of its best customers in order to beat the competition, not that there is actually one at the time.\nWhat\u0026rsquo;s Next for Nintendo and the Switch? # Currently, the Switch is already the 7th best selling console of all time and the 2nd best selling handheld gaming device of all time with 89 million units sold worldwide. Considering just the consoles still in the market, the Switch has already become the number 2 device in just 4 years.\nIt is expected that, for the time being, Nintendo will retain its position in the market and keep evolving the Switch and its ecosystem with new incremental improvements. Companies like Sony and Microsoft which are targeting the high-end gamer segment will not be able to compete with Nintendo due to the humongous differences in the structures of their businesses and organization. Moreover, the other organizations also do not have any incentive to try to compete in the same market as Nintendo because, from their point of view, it is a lower margin market than the one they already have which creates an asymmetric motivation for them to flee up, conceding the low-end without fighting over it. Finally, Nintendo will have a huge advantage over new competitors that tackle its segment and it has every motivation to fight the entrance of new players into its space.\nHowever, there are still points that might require course correction to avoid potential future problems. The first one is the lack of traction from other game developers and publishers in respect to the Switch. Looking at the list of the top 10 best-selling games for the platform only 2 were not developed by Nintendo or one of its subsidiaries. The Switch developer experience has a low barrier to entry (each dev kit costing around $450) but there is a 30% “tax” on each game sold taken from the developers/publishers by Nintendo. The company could potentially look at their developer relationships and explore ways to improve the business model to get a bigger catalog of games faster. A couple of examples would be to help promote games via their channels, or the creation of an indie games program to help and promote smaller companies. Ultimately, this means that in order to grow Nintendo needs to move away from its integrated strategy into a specialized one where it focuses on the most important pieces of the system and in delivering it perfectly i.e. the console, the store, and its IP. But for that, it needs to ensure the right level of modularity so that other developers and publishers can thrive in that space.\nAnother issue with the Switch is the lack of non-gaming applications available in the device that leads to a clash with the main Job-To-Be-Done for the product, “I want entertainment for me and my family”. The Switch has the potential to be the central hub for family entertainment, however, only three video streaming applications are available on the platform: Hulu, Youtube, and Funimation. Working with companies that provide other types of entertainment like Netflix and Disney and helping them launch those services on the Switch would be a great opportunity for Nintendo to improve the feature set of the device and better serve its users.\nRegarding the future, Nintendo is clearly betting on game streaming as a way to move up in the market and disrupt yet again the other players. This would be a great technology to drive the next round of low-end disruption by offering a cheaper way to play AAA games without having to own expensive hardware and upgrade it every one or two years. However, creating its own streaming service might not be the best strategy, Nintendo should look into making its system more modular and potentially partnering with other companies like Google Stadia to get access to streaming capabilities and an existing catalog of games right away.\nUltimately, the common factor across all of Nintendo’s decisions and actions has been the ability to focus on understanding and delivering against the underlying Job-To-Be-Done for its customers. The company was able to understand that the gaming experience could solve the problem (or “job”) of family or party entertainment as well as the standard problems customers hire a gaming device to solve (i.e. play games). By organizing the entire company around these jobs, Nintendo created the ability to target non-consumption and attract a completely different segment of users to its products. Moreover, by implementing an integrated strategy that delivered new hardware, developed new games, and leveraged family-friendly characters known around the world, Nintendo was able to deliver a perfect solution for the job and completely disrupt the gaming industry. In my view, this relentless focus on the customer and how to best solve its problem is why Nintendo has become a Purpose Brand that focuses on providing great family fun and entertainment using technology.\nReferences # Henderson, Rik. “What is Nintendo Switch Cloud Streaming, how does it work and what Cloud Version games are there?” Pocket-Lint\nHerold, Charles. “10 Reasons the Wii U Was a Failure.” Lifewire.\nNintendo. “Nintendo Annual Report FY 2021.”\nOrland, Kyle. “What the “OLED Model” means for the future of Nintendo Switch.” ARS Technica.\nPeckham, Matt. “19 Things Nintendo\u0026rsquo;s President Told Us About Switch and More.” Time.\nStatista. “Nintendo\u0026rsquo;s net sales from fiscal 2008 to 2021.”\nWikipedia. “List of best-selling game consoles.”\nWikipedia. “List of best-selling Nintendo Switch video games.”\n","date":"9 September 2021","permalink":"/posts/202109-the-future-of-nintendo/","section":"Posts","summary":"Nintendo achieved something truly amazing with the launch of the Switch. It was able to disrupt itself and the entire gaming industry while saving itself from doom. How exactly was Nintendo able to do it and what comes next in that story?","title":"The Future of the Nintendo Switch"}]